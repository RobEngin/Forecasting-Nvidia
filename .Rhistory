btc_price <- read.csv("BTC-USD.csv", sep=",", header = TRUE)
View(btc_price)
btc_price <- read.csv("BTC_Total Addresses_Bitcoin.csv", sep=",", header = TRUE)
btc_addr_total <- read.csv("BTC_Total Addresses_Bitcoin.csv", sep=",", header = TRUE)
View(btc_addr_total)
btc_transaction <- read.csv("BTC_Number of Transactions_Bitcoin.csv", sep=",", header = TRUE)
View(btc_transaction)
btc_miner_rewards <- read.csv("BTC_Miner Rewards_undefined.csv", sep=",", header = TRUE)
View(btc_miner_rewards)
btc_hashrate_difficulty <- read.csv("BTC_Hash Rate_Difficulty.csv", sep=",", header = TRUE)
View(btc_hashrate_difficulty)
btc_days_halving <- read.csv("days_to_halving.csv", sep=",", header = TRUE)
View(btc_days_halving)
barplot(btc_days_halving)
plot(btc_days_halving)
plot(btc_days_halving$missing_days_to_next_halving)
# Upload data
btc_price <- read.csv("BTC-USD.csv", sep=",", header = TRUE)
plot(btc_price$Adj.Close)
plot(btc_price$Adj.Close)
View(btc_price)
date <- as.Date(btc_price$Date)
# Crea un grafico usando ggplot2
ggplot(btc_price, aes(x = date, y = btc_price$Adj.Close)) +
geom_line(color = "blue", size = 1) +
labs(x = "Data", y = "Prezzo di Bitcoin", title = "Andamento del Prezzo di Bitcoin") +
theme_minimal()
library(ggplot2)
ggplot(btc_price, aes(x = date, y = btc_price$Adj.Close)) +
geom_line(color = "blue", size = 1) +
labs(x = "Data", y = "Prezzo di Bitcoin", title = "Andamento del Prezzo di Bitcoin") +
theme_minimal()
# Crea un grafico usando ggplot2
ggplot(btc_price, aes(x = date, y = btc_price$Adj.Close)) +
geom_line(color = "orange", size = 1) +
labs(x = "Data", y = "Prezzo di Bitcoin", title = "Andamento del Prezzo di Bitcoin") +
theme_minimal()
# Crea un grafico usando ggplot2
ggplot(btc_price, aes(x = date, y = btc_price$Adj.Close)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
View(btc_price)
start_date <- as.Date("2017-09-18")
end_date <- as.Date("2023-11-09")
# Filtra il dataframe per mantenere solo le righe nell'intervallo specificato
filtered_btc_price <- subset(btc_price, Date >= start_date & Date <= end_date)
ggplot(filtered_btc_price, aes(x = date, y = btc_price$Adj.Close)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
ggplot(filtered_btc_price, aes(x = date, y = filtered_btc_price$Adj.Close)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
date <- as.Date(filtered_btc_price$Date)
ggplot(filtered_btc_price, aes(x = date, y = filtered_btc_price$Adj.Close)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
start_date <- as.Date("2015-09-18") # 2014-09-17
end_date <- as.Date("2023-11-09") # 2023-11-09
# Filtra il dataframe per mantenere solo le righe nell'intervallo specificato
filtered_btc_price <- subset(btc_price, Date >= start_date & Date <= end_date)
date <- as.Date(filtered_btc_price$Date)
ggplot(filtered_btc_price, aes(x = date, y = filtered_btc_price$Adj.Close)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
filtered_btc_price$log_Adj.Close <- log(filtered_btc_price$Adj.Close)
ggplot(filtered_btc_price, aes(x = date, y = filtered_btc_price$log_Adj.Close)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
# BTC PRICE
start_date <- as.Date("2014-09-17") # 2014-09-17
filtered_btc_price <- subset(btc_price, Date >= start_date & Date <= end_date) # price
filtered_btc_price$log_Adj.Close <- log(filtered_btc_price$Adj.Close) # log price
date <- as.Date(filtered_btc_price$Date)
ggplot(filtered_btc_price, aes(x = date, y = filtered_btc_price$log_Adj.Close)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
View(btc_miner_rewards)
View(btc_price)
# Upload data
btc_price <- read.csv("BTC_price_Bitcoin.csv", sep=",", header = TRUE)
start_date <- as.Date("2014-09-17") # 2014-09-17
end_date <- as.Date("2023-11-09") # 2023-11-09
filtered_btc_price <- subset(btc_price, Date >= start_date & Date <= end_date) # price
View(btc_price)
start_date <- as.Date("2014-09-17") # 2014-09-17
end_date <- as.Date("2023-11-09") # 2023-11-09
filtered_btc_price <- subset(btc_price, DateTime >= start_date & DateTime <= end_date) # price
filtered_btc_price$log_Adj.Close <- log(filtered_btc_price$Adj.Close) # log price
date <- as.Date(filtered_btc_price$DateTime)
ggplot(filtered_btc_price, aes(x = date, y = filtered_btc_price$log_Adj.Close)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
date <- as.Date(filtered_btc_price$DateTime)
date <- as.Date(filtered_btc_price$DateTime)
View(filtered_btc_price)
date <- as.Date(substr(filtered_btc_price$DateTime, 1, 10))
ggplot(filtered_btc_price, aes(x = date, y = filtered_btc_price$log_Adj.Close)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
rlang::last_trace()
btc_price$DateTime <- as.Date(substr(filtered_btc_price$DateTime, 1, 10))
btc_price$DateTime <- as.Date(substr(btc_price$DateTime, 1, 10))
filtered_btc_price <- subset(btc_price, DateTime >= start_date & DateTime <= end_date) # price
filtered_btc_price$log_Adj.Close <- log(filtered_btc_price$Adj.Close) # log price
filtered_btc_price$log_Price <- log(filtered_btc_price$Price) # log price
date <- as.Date(substr(filtered_btc_price$DateTime, 1, 10))
ggplot(filtered_btc_price, aes(x = date, y = filtered_btc_price$Price)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
ggplot(filtered_btc_price, aes(x = date, y = filtered_btc_price$log_Price)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
library(ggplot2)
btc_price <- read.csv("BTC_price_Bitcoin.csv", sep=",", header = TRUE)
btc_addr_total <- read.csv("BTC_Total Addresses_Bitcoin.csv", sep=",", header = TRUE)
btc_transaction <- read.csv("BTC_Number of Transactions_Bitcoin.csv", sep=",", header = TRUE)
btc_miner_rewards <- read.csv("BTC_Miner Rewards_undefined.csv", sep=",", header = TRUE)
btc_hashrate_difficulty <- read.csv("BTC_Hash Rate_Difficulty.csv", sep=",", header = TRUE)
btc_avg_fees <- read.csv("BTC_Average Transaction Fees_Bitcoin.csv", sep=",", header = TRUE)
btc_days_halving <- read.csv("days_to_halving.csv", sep=",", header = TRUE)
start_date <- as.Date("2014-09-17") # 2014-09-17
end_date <- as.Date("2023-11-09") # 2023-11-09
btc_price$DateTime <- as.Date(substr(btc_price$DateTime, 1, 10))
filtered_btc_price <- subset(btc_price, DateTime >= start_date & DateTime <= end_date) # price
filtered_btc_price$log_Price <- log(filtered_btc_price$Price) # log price
ggplot(filtered_btc_price, aes(x = date, y = filtered_btc_price$log_Price)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
date <- as.Date(substr(filtered_btc_price$DateTime, 1, 10))
date_range <- as.Date(substr(filtered_btc_price$DateTime, 1, 10))
ggplot(filtered_btc_price, aes(x = date_range, y = filtered_btc_price$log_Price)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
View(btc_price)
start_date <- as.Date("2010-07-17") # 2010-07-17
end_date <- as.Date("2023-11-09") # 2023-11-09
btc_price$DateTime <- as.Date(substr(btc_price$DateTime, 1, 10))
filtered_btc_price <- subset(btc_price, DateTime >= start_date & DateTime <= end_date) # price
filtered_btc_price$log_Price <- log(filtered_btc_price$Price) # log price
date_range <- as.Date(substr(filtered_btc_price$DateTime, 1, 10))
ggplot(filtered_btc_price, aes(x = date_range, y = filtered_btc_price$log_Price)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
ggplot(filtered_btc_price, aes(x = date_range, y = filtered_btc_price$Price)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
ggplot(filtered_btc_price, aes(x = date_range, y = filtered_btc_price$log_Price)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
View(btc_days_halving)
View(btc_addr_total)
dollar_circulation <- read.csv("CURRCIR.csv", sep=",", header = TRUE)
ggplot() +
geom_line(data = filtered_btc_price, aes(x = date_range, y = log_Price), color = "orange", size = 1, linetype = "solid") +
#geom_line(data = another_data, aes(x = date_range, y = log_Another_Time_Series), color = "blue", size = 1, linetype = "dashed") +
labs(x = "Date", y = "Log(Price)", title = "Bitcoin Price and Another Time Series") +
scale_linetype_manual(name = "Legend", values = c("solid", "dashed"), labels = c("Bitcoin Price", "Another Time Series"))
View(dollar_circulation)
View(dollar_circulation)
dollar_circulation$log_CURRCIR <- log(dollar_circulation$CURRCIR)
ggplot() +
geom_line(data = filtered_btc_price, aes(x = date_range, y = log_Price), color = "orange", size = 1, linetype = "solid") +
geom_line(data = dollar_circulation, aes(x = date_range, y = log_CURRCIR), color = "blue", size = 1, linetype = "dashed") +
labs(x = "Date", y = "Log(Price)", title = "Bitcoin Price and Another Time Series") +
scale_linetype_manual(name = "Legend", values = c("solid", "dashed"), labels = c("Bitcoin Price", "Another Time Series"))
View(filtered_btc_price)
View(dollar_circulation)
# DOLLAR
ggplot(filtered_btc_price, aes(x = date_range, y = dollar_circulation$log_CURRCIR)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
# DOLLAR DATE
dollar_circulation$DATE <- as.Date(substr(dollar_circulation$DATE, 1, 10))
# DOLLAR DATE
dollar_circulation$DATE <- as.Date(substr(dollar_circulation$DATE, 1, 10))
filtered_dollar_circulation <- subset(dollar_circulation, DATE >= start_date & DATE <= end_date) # price
filtered_dollar_circulation$log_CURRCIR <- log(dollar_circulation$CURRCIR)
filtered_dollar_circulation$log_CURRCIR <- log(filtered_dollar_circulation$CURRCIR)
date_range_dollar <- as.Date(substr(filtered_dollar_circulation$DATE, 1, 10))
ggplot(filtered_dollar_circulation, aes(x = date_range, y = dollar_circulation$log_CURRCIR)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
# DOLLAR
ggplot(filtered_dollar_circulation, aes(x = date_range_dollar, y = filtered_dollar_circulation$log_CURRCIR)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
ggplot() +
geom_line(data = filtered_btc_price, aes(x = date_range_btc, y = log_Price), color = "orange", size = 1, linetype = "solid") +
geom_line(data = filtered_dollar_circulation, aes(x = date_range_dollar, y = log_CURRCIR), color = "blue", size = 1, linetype = "dashed") +
labs(x = "Date", y = "Log(Price)", title = "Bitcoin Price and Another Time Series") +
scale_linetype_manual(name = "Legend", values = c("solid", "dashed"), labels = c("Bitcoin Price", "Another Time Series"))
ggplot() +
geom_line(data = filtered_btc_price, aes(x = date_range_btc, y = log_Price), color = "orange", size = 1, linetype = "solid") +
geom_line(data = filtered_dollar_circulation, aes(x = date_range_dollar, y = log_CURRCIR), color = "blue", size = 1, linetype = "dashed") +
labs(x = "Date", y = "Log(Price)", title = "Bitcoin Price and Another Time Series") +
scale_linetype_manual(name = "Legend", values = c("solid", "dashed"), labels = c("Bitcoin Price", "Another Time Series"))
ggplot(filtered_dollar_circulation, aes(x = date_range_dollar, y = filtered_dollar_circulation$CURRCIR)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
ggplot() +
geom_line(data = filtered_btc_price, aes(x = date_range_btc, y = log_Price), color = "orange", size = 1, linetype = "solid") +
geom_line(data = filtered_dollar_circulation, aes(x = date_range_dollar, y = log_CURRCIR), color = "blue", size = 1, linetype = "dashed") +
labs(x = "Date", y = "Log(Price)", title = "Bitcoin Price and Another Time Series") +
scale_linetype_manual(name = "Legend", values = c("solid", "dashed"), labels = c("Bitcoin Price", "Another Time Series"))
date_range_btc <- as.Date(substr(filtered_btc_price$DateTime, 1, 10))
ggplot() +
geom_line(data = filtered_btc_price, aes(x = date_range_btc, y = log_Price), color = "orange", size = 1, linetype = "solid") +
geom_line(data = filtered_dollar_circulation, aes(x = date_range_dollar, y = log_CURRCIR), color = "blue", size = 1, linetype = "dashed") +
labs(x = "Date", y = "Log(Price)", title = "Bitcoin Price and Another Time Series") +
scale_linetype_manual(name = "Legend", values = c("solid", "dashed"), labels = c("Bitcoin Price", "Another Time Series"))
start_date <- as.Date("2015-07-17") # 2010-07-17
end_date <- as.Date("2023-11-09") # 2023-11-09
# BTC DATE
btc_price$DateTime <- as.Date(substr(btc_price$DateTime, 1, 10))
filtered_btc_price <- subset(btc_price, DateTime >= start_date & DateTime <= end_date) # price
filtered_btc_price$log_Price <- log(filtered_btc_price$Price) # log price
date_range_btc <- as.Date(substr(filtered_btc_price$DateTime, 1, 10))
# BTC
ggplot(filtered_btc_price, aes(x = date_range_btc, y = filtered_btc_price$log_Price)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
# DOLLAR DATE
dollar_circulation$DATE <- as.Date(substr(dollar_circulation$DATE, 1, 10))
filtered_dollar_circulation <- subset(dollar_circulation, DATE >= start_date & DATE <= end_date) # price
filtered_dollar_circulation$log_CURRCIR <- log(filtered_dollar_circulation$CURRCIR)
date_range_dollar <- as.Date(substr(filtered_dollar_circulation$DATE, 1, 10))
# DOLLAR
ggplot(filtered_dollar_circulation, aes(x = date_range_dollar, y = filtered_dollar_circulation$CURRCIR)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
ggplot() +
geom_line(data = filtered_btc_price, aes(x = date_range_btc, y = log_Price), color = "orange", size = 1, linetype = "solid") +
geom_line(data = filtered_dollar_circulation, aes(x = date_range_dollar, y = log_CURRCIR), color = "blue", size = 1, linetype = "dashed") +
labs(x = "Date", y = "Log(Price)", title = "Bitcoin Price and Another Time Series") +
scale_linetype_manual(name = "Legend", values = c("solid", "dashed"), labels = c("Bitcoin Price", "Another Time Series"))
ggplot() +
geom_line(data = filtered_btc_price, aes(x = date_range_btc, y = Price), color = "orange", size = 1, linetype = "solid") +
geom_line(data = filtered_dollar_circulation, aes(x = date_range_dollar, y = CURRCIR), color = "blue", size = 1, linetype = "dashed") +
labs(x = "Date", y = "Log(Price)", title = "Bitcoin Price and Another Time Series") +
scale_linetype_manual(name = "Legend", values = c("solid", "dashed"), labels = c("Bitcoin Price", "Another Time Series"))
ggplot() +
geom_line(data = filtered_btc_price, aes(x = date_range_btc, y = Price), color = "orange", size = 1, linetype = "solid") +
geom_line(data = filtered_dollar_circulation, aes(x = date_range_dollar, y = CURRCIR*1000), color = "blue", size = 1, linetype = "dashed") +
labs(x = "Date", y = "Log(Price)", title = "Bitcoin Price and Another Time Series") +
scale_linetype_manual(name = "Legend", values = c("solid", "dashed"), labels = c("Bitcoin Price", "Another Time Series"))
ggplot() +
geom_line(data = filtered_btc_price, aes(x = date_range_btc, y = Price), color = "orange", size = 1, linetype = "solid") +
geom_line(data = filtered_dollar_circulation, aes(x = date_range_dollar, y = CURRCIR*10), color = "blue", size = 1, linetype = "dashed") +
labs(x = "Date", y = "Log(Price)", title = "Bitcoin Price and Another Time Series") +
scale_linetype_manual(name = "Legend", values = c("solid", "dashed"), labels = c("Bitcoin Price", "Another Time Series"))
View(btc_addr_total)
# ADDRESS DATE
btc_addr_total$DateTime <- as.Date(substr(btc_addr_total$DateTime, 1, 10))
filtered_btc_addr_total <- subset(btc_addr_total, DateTime >= start_date & DateTime <= end_date) # price
date_range_btc_addr_total <- as.Date(substr(filtered_btc_addr_total$DateTime, 1, 10))
ggplot(filtered_btc_addr_total, aes(x = date_range_btc_addr_total, y = filtered_btc_addr_total$Total.With.Balance)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
ggplot(filtered_btc_addr_total, aes(x = date_range_btc_addr_total, y = filtered_btc_addr_total$Total.With.Balance)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Total Address with Balance", title = "Bitcoin Address over time")
ggplot() +
geom_line(data = filtered_btc_price, aes(x = date_range_btc, y = Price), color = "orange", size = 1, linetype = "solid") +
geom_line(data = filtered_btc_addr_total, aes(x = date_range_btc_addr_total, y = Total.With.Balance), color = "blue", size = 1, linetype = "dashed") +
labs(x = "Date", y = "Log(Price)", title = "Bitcoin Price and Another Time Series") +
scale_linetype_manual(name = "Legend", values = c("solid", "dashed"), labels = c("Bitcoin Price", "Another Time Series"))
ggplot() +
geom_line(data = filtered_btc_price, aes(x = date_range_btc, y = Price), color = "orange", size = 1, linetype = "solid") +
geom_line(data = filtered_btc_addr_total, aes(x = date_range_btc_addr_total, y = log(Total.With.Balance)), color = "blue", size = 1, linetype = "dashed") +
labs(x = "Date", y = "Log(Price)", title = "Bitcoin Price and Another Time Series") +
scale_linetype_manual(name = "Legend", values = c("solid", "dashed"), labels = c("Bitcoin Price", "Another Time Series"))
ggplot() +
geom_line(data = filtered_btc_price, aes(x = date_range_btc, y = log_Price), color = "orange", size = 1, linetype = "solid") +
geom_line(data = filtered_btc_addr_total, aes(x = date_range_btc_addr_total, y = log(Total.With.Balance)), color = "blue", size = 1, linetype = "dashed") +
labs(x = "Date", y = "Log(Price)", title = "Bitcoin Price and Another Time Series") +
scale_linetype_manual(name = "Legend", values = c("solid", "dashed"), labels = c("Bitcoin Price", "Another Time Series"))
# ADDRESS
ggplot(filtered_btc_addr_total, aes(x = date_range_btc_addr_total, y = filtered_btc_addr_total$Total.With.Balance)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Total Address with Balance", title = "Bitcoin Address over time")
start_date <- as.Date("2010-07-17") # 2010-07-17
start_date <- as.Date("2010-07-17") # 2010-07-17
end_date <- as.Date("2023-11-09") # 2023-11-09
# BTC DATE
btc_price$DateTime <- as.Date(substr(btc_price$DateTime, 1, 10))
filtered_btc_price <- subset(btc_price, DateTime >= start_date & DateTime <= end_date) # price
filtered_btc_price$log_Price <- log(filtered_btc_price$Price) # log price
date_range_btc <- as.Date(substr(filtered_btc_price$DateTime, 1, 10))
# BTC
ggplot(filtered_btc_price, aes(x = date_range_btc, y = filtered_btc_price$log_Price)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
# DOLLAR DATE
dollar_circulation$DATE <- as.Date(substr(dollar_circulation$DATE, 1, 10))
filtered_dollar_circulation <- subset(dollar_circulation, DATE >= start_date & DATE <= end_date) # price
filtered_dollar_circulation$log_CURRCIR <- log(filtered_dollar_circulation$CURRCIR)
date_range_dollar <- as.Date(substr(filtered_dollar_circulation$DATE, 1, 10))
# DOLLAR
ggplot(filtered_dollar_circulation, aes(x = date_range_dollar, y = filtered_dollar_circulation$CURRCIR)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
# ADDRESS DATE
btc_addr_total$DateTime <- as.Date(substr(btc_addr_total$DateTime, 1, 10))
filtered_btc_addr_total <- subset(btc_addr_total, DateTime >= start_date & DateTime <= end_date) # price
date_range_btc_addr_total <- as.Date(substr(filtered_btc_addr_total$DateTime, 1, 10))
# ADDRESS
ggplot(filtered_btc_addr_total, aes(x = date_range_btc_addr_total, y = filtered_btc_addr_total$Total.With.Balance)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Total Address with Balance", title = "Bitcoin Address over time")
