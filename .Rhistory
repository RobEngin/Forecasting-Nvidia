plot(res)
#the form of residuals seems to indicate the presence of negative autocorrelation
Acf(res)
dw<- dwtest(m1, alt="two.sided")
dw
###we estimate a simple Bass Model
bm_price <- BM(price,display = T)
summary(bm_cass)
###we estimate a simple Bass Model
bm_price <- BM(price,display = T)
summary(bm_price)
View(dataset)
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:60))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(tw, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:60))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,-0.1,0.1))
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:60))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1)
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:60))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,-0.1,0.1))
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:60))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
pred_GBMe1tw<- predict(GBMe1tw, newx=c(1:60))
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:60))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:60))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,-0.1,0.1))
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:60))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,0.1,0.1))
summary(GBMe1tw)
pred_GBMe1tw<- predict(GBMe1tw, newx=c(1:60))
pred_GBMe1tw.inst<- make.instantaneous(pred_GBMe1tw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred_GBMe1tw.inst, lwd=2, col=2)
bm_tw<-BM(price,display = T)
#install.packages("dplyr")
library(ggplot2)
library(dplyr)
library(corrplot)
library(readxl)
library(lmtest)
library(forecast)
library(DIMORA)
library(fpp2)
btc_price <- read.csv("BTC_price_Bitcoin.csv", sep=",", header = TRUE) # daily
dollar_circulation <- read.csv("CURRCIR.csv", sep=",", header = TRUE) # monthly
btc_addr_total <- read.csv("BTC_Total Addresses_Bitcoin.csv", sep=",", header = TRUE) # daily
btc_hashrate_difficulty <- read.csv("BTC_Hash Rate_Difficulty.csv", sep=",", header = TRUE) # daily
btc_transaction <- read.csv("BTC_Number of Transactions_Bitcoin.csv", sep=",", header = TRUE) # daily
btc_miner_rewards <- read.csv("BTC_Miner Rewards_undefined.csv", sep=",", header = TRUE) # daily
btc_avg_fees <- read.csv("BTC_Average Transaction Fees_Bitcoin.csv", sep=",", header = TRUE) # daily not null from 29/11/09
btc_days_halving <- read.csv("days_to_halving.csv", sep=",", header = TRUE) # daily
# Normalize data
norm <- function(lista_numeri) {
# Calcola il minimo e il massimo della lista
minimo <- min(lista_numeri)
massimo <- max(lista_numeri)
# Normalizza la lista tra 0 e 1
lista_normalizzata <- (lista_numeri - minimo) / (massimo - minimo)
# Restituisci la lista normalizzata
return(lista_normalizzata)
}
# From daily to monthly
monthly <- function(data, col_date) {
# Assicurati che la colonna 'DateTime' sia di tipo Date
data[[col_date]] <- as.Date(data[[col_date]], format = "%Y-%m-%dT%H:%M:%S.000Z")
# Estrai il mese dalla colonna 'DateTime'
data <- data %>%
mutate(Month = format(get(col_date), "%Y-%m"))
# Seleziona solo colonne numeriche per calcolare la media
cols_num <- names(data)[sapply(data, is.numeric)]
# Calcola la media delle colonne numeriche per ogni mese
new_dataset <- data %>%
group_by(Month) %>%
summarise(across(all_of(cols_num), mean))
new_dataset$Month <- as.Date(paste(new_dataset$Month, "01", sep = "-"))
# Restituisci il nuovo dataset
return(new_dataset)
}
btc_price <- monthly(btc_price, "DateTime")
btc_addr_total <- monthly(btc_addr_total, "DateTime")
btc_hashrate_difficulty <- monthly(btc_hashrate_difficulty, "DateTime")
btc_transaction <- monthly(btc_transaction, "DateTime")
btc_miner_rewards <- monthly(btc_miner_rewards, "DateTime")
btc_avg_fees <- monthly(btc_avg_fees, "DateTime")
#btc_days_halving <- monthly(btc_days_halving, "date")
start_date <- as.Date("2011-09-01") # 2011-09-01
end_date <- as.Date("2023-10-01") # 2023-10-01
btc_price <- btc_price[btc_price$Month >= start_date & btc_price$Month <= end_date, ] # price
dollar_circulation <- dollar_circulation[dollar_circulation$DATE >= start_date & dollar_circulation$DATE <= end_date, ] # price
btc_addr_total <- btc_addr_total[btc_addr_total$Month >= start_date & btc_addr_total$Month <= end_date, ] # price
btc_hashrate_difficulty <- btc_hashrate_difficulty[btc_hashrate_difficulty$Month >= start_date & btc_hashrate_difficulty$Month <= end_date, ] # price
btc_transaction <- btc_transaction[btc_transaction$Month >= start_date & btc_transaction$Month <= end_date, ] # price
btc_miner_rewards <- btc_miner_rewards[btc_miner_rewards$Month >= start_date & btc_miner_rewards$Month <= end_date, ] # price
nrows <- nrow(btc_miner_rewards)
row_pre <- btc_miner_rewards[(nrows - 29):(nrows - 15), -1]
btc_miner_rewards[(nrows - 14):nrows, -1] <- row_pre
btc_price$log_Price <- log(btc_price$Price)
dollar_circulation$log_CURRCIR <- log(dollar_circulation$CURRCIR)
btc_addr_total$log_total <- log(btc_addr_total$Total.With.Balance)
btc_hashrate_difficulty$log_HashRate <- log(btc_hashrate_difficulty$Hash.Rate)
btc_transaction$log_transaction <- log(btc_transaction$Number.Of.Transactions)
btc_miner_rewards$log_Rewards <- log(btc_miner_rewards$Rewards)
ggplot(btc_price, aes(x = Month, y = log_Price)) +
geom_line(color = "orange", size = 1) +
labs(x = "Date", y = "Price Bitcoin", title = "Bitcoin price over time")
ggplot() +
geom_line(data = btc_price, aes(x = Month, y = norm(log_Price)), color = "orange", size = 1, linetype = "solid") +
geom_line(data = dollar_circulation, aes(x = as.Date(DATE), y = norm(log_CURRCIR)), color = "red", size = 0.2, linetype = "solid") +
geom_line(data = btc_addr_total, aes(x = Month, y = norm(log_total)), color = "green", size = 0.2, linetype = "solid") +
geom_line(data = btc_transaction, aes(x = Month, y = norm(log_transaction)), color = "black", size = 0.2, linetype = "solid") +
geom_line(data = btc_hashrate_difficulty, aes(x = Month, y = norm(log_HashRate)), color = "blue", size = 0.2, linetype = "solid") +
geom_line(data = btc_miner_rewards, aes(x = Month, y = norm(log_Rewards)), color = "blue", size = 0.2, linetype = "solid") +
labs(x = "Date", y = "Log(Price)", title = "Bitcoin Price and other Time Series") +
scale_linetype_manual(name = "Legend", values = c("solid", "dashed"), labels = c("Bitcoin Price", "Another Time Series"))
dataset_log <- data.frame(price = btc_price$log_Price,
dollar_circulation = dollar_circulation$log_CURRCIR,
total_addr = btc_addr_total$log_total,
transaction = btc_transaction$log_transaction,
hashrate = btc_hashrate_difficulty$log_HashRate,
rewards = btc_miner_rewards$log_Rewards)
dataset <- data.frame(price = btc_price$Price,
dollar_circulation = dollar_circulation$CURRCIR,
total_addr = btc_addr_total$Total.With.Balance,
transaction = btc_transaction$Number.Of.Transactions,
hashrate = btc_hashrate_difficulty$Hash.Rate,
rewards = btc_miner_rewards$Rewards)
dataset_log <- data.frame(price = btc_price$log_Price,
dollar_circulation = dollar_circulation$log_CURRCIR,
total_addr = btc_addr_total$log_total,
transaction = btc_transaction$log_transaction,
hashrate = btc_hashrate_difficulty$log_HashRate,
rewards = btc_miner_rewards$log_Rewards)
dataset <- data.frame(price = btc_price$Price,
dollar_circulation = dollar_circulation$CURRCIR,
total_addr = btc_addr_total$Total.With.Balance,
transaction = btc_transaction$Number.Of.Transactions,
hashrate = btc_hashrate_difficulty$Hash.Rate,
rewards = btc_miner_rewards$Rewards)
acf(dataset$price)
mat <- cor(dataset)
corrplot(mat, method = "color", addCoef.col = "black")
dataset$price_diff <- c(NA, diff(dataset$price))
dataset$dollar_circulation_diff <- c(NA, diff(dataset$dollar_circulation))
dataset$total_addr_diff <- c(NA, diff(dataset$total_addr))
dataset$transaction_diff <- c(NA, diff(dataset$transaction))
dataset$hashrate_diff <- c(NA, diff(dataset$hashrate))
dataset$rewards_diff <- c(NA, diff(dataset$rewards))
# Rimuovi le variabili temporali originali
dataset_senza_tempo <- subset(dataset, select = -c(price, dollar_circulation, total_addr, transaction, hashrate, rewards))
# Calcola la matrice di correlazione
matrix_correlazione <- cor(dataset_senza_tempo, use = "complete.obs")
# Visualizza la matrice di correlazione
print(matrix_correlazione)
corrplot(matrix_correlazione, method = "color", addCoef.col = "black")
price <- log(dataset$price)
tt <- 1:NROW(dataset)
plot(tt, price, xlab="Time", ylab="Bitcoin price")
acf(price)
fit1 <- lm(price~ tt)
summary(fit1)
plot(tt, price, xlab="Time", ylab="Bitcoin price")
abline(fit1, col=3)
dwtest(fit1)
resfit1<- residuals(fit1)
plot(resfit1,xlab="Time", ylab="residuals" )
price.ts <- ts(price, frequency = 4)
ts.plot(price.ts, type="o")
## we fit a linear model with the tslm function
fitts<- tslm(price.ts~trend)
###obviously it gives the same results of the first model
summary(fitts)
dwtest(fitts)
#take a portion of data and fit a linear model with tslm
price1 <- window(price.ts, start=1, end=31 -.1)
plot(price1)
m1<- tslm(price1 ~ trend+season)
summary(m1)
fit<- fitted(m1)
plot(price1)
lines(fitted(m1), col=2)
fore <- forecast(m1)
plot(fore)
#analysis of residuals
res<- residuals(m1)
plot(res)
#the form of residuals seems to indicate the presence of negative autocorrelation
Acf(res)
dw<- dwtest(m1, alt="two.sided")
dw
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:60))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,0.1,0.1))
summary(GBMe1tw)
pred_GBMe1tw<- predict(GBMe1tw, newx=c(1:60))
pred_GBMe1tw.inst<- make.instantaneous(pred_GBMe1tw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred_GBMe1tw.inst, lwd=2, col=2)
View(bm_tw)
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:146))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,0.1,0.1))
summary(GBMe1tw)
pred_GBMe1tw<- predict(GBMe1tw, newx=c(1:60))
pred_GBMe1tw.inst<- make.instantaneous(pred_GBMe1tw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred_GBMe1tw.inst, lwd=2, col=2)
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:146))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,0.1,0.1))
summary(GBMe1tw)
pred_GBMe1tw<- predict(GBMe1tw, newx=c(1:146))
pred_GBMe1tw.inst<- make.instantaneous(pred_GBMe1tw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred_GBMe1tw.inst, lwd=2, col=2)
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:146))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,0.1,0.1))
summary(GBMe1tw)
pred_GBMe1tw<- predict(GBMe1tw, newx=c(1:146))
pred_GBMe1tw.inst<- make.instantaneous(pred_GBMe1tw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred_GBMe1tw.inst, lwd=2, col=2)
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:146))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(tw,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,-0.1,0.1))
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:146))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,-0.1,0.1))
######GGM
GGM_tw<- GGM(price, prelimestimates=c(4.463368e+04, 0.001, 0.01, 1.923560e-03, 9.142022e-02))
summary(GGM_tw)
pred_GGM_tw<- predict(GGM_tw, newx=c(1:146))
pred_GGM_tw.inst<- make.instantaneous(pred_GGM_tw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred_GGM_tw.inst, lwd=2, col=2)
lines(pred.insttw, lwd=2, col=3)
###Analysis of residuals
res_GGMtw<- residuals(GGM_tw)
acf<- acf(residuals(GGM_tw))
fit_GGMtw<- fitted(GGM_tw)
fit_GGMtw_inst<- make.instantaneous(fit_GGMtw)
####SARMAX refining
library(forecast)
####SARMAX model with external covariate 'fit_GGM'
s2 <- Arima(cumsum(price), order = c(3,0,1), seasonal=list(order=c(3,0,1), period=4),xreg = fit_GGMtw)
summary(s2)
pres2 <- make.instantaneous(fitted(s2))
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37,46), labels=price$quarter[c(1,10,19,28,37,46)])
####SARMAX refining
library(forecast)
####SARMAX model with external covariate 'fit_GGM'
s2 <- Arima(cumsum(price), order = c(3,0,1), seasonal=list(order=c(3,0,1), period=4),xreg = fit_GGMtw)
summary(s2)
pres2 <- make.instantaneous(fitted(s2))
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, xaxt="n", cex=0.6)
lines(fit_GGMtw_inst, lwd=1, lty=2)
lines(pres2, lty=1,lwd=1)
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(50:146))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(50,146))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,-0.1,0.1))
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(50:146))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(50,146))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
#GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,-0.1,0.1))
#summary(GBMe1tw)
pred_GBMe1tw<- predict(GBMe1tw, newx=c(50:146))
pred_GBMe1tw.inst<- make.instantaneous(pred_GBMe1tw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(50,146))
lines(pred_GBMe1tw.inst, lwd=2, col=2)
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(50:146))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
#GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,-0.1,0.1))
#summary(GBMe1tw)
pred_GBMe1tw<- predict(GBMe1tw, newx=c(50:146))
pred_GBMe1tw.inst<- make.instantaneous(pred_GBMe1tw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred_GBMe1tw.inst, lwd=2, col=2)
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:146))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
#GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,-0.1,0.1))
#summary(GBMe1tw)
pred_GBMe1tw<- predict(GBMe1tw, newx=c(50:146))
pred_GBMe1tw.inst<- make.instantaneous(pred_GBMe1tw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred_GBMe1tw.inst, lwd=2, col=2)
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:146))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,0.1,0.1))
summary(GBMe1tw)
pred_GBMe1tw<- predict(GBMe1tw, newx=c(50:146))
pred_GBMe1tw.inst<- make.instantaneous(pred_GBMe1tw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred_GBMe1tw.inst, lwd=2, col=2)
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:146))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,0.1,0.1))
summary(GBMe1tw)
pred_GBMe1tw<- predict(GBMe1tw, newx=c(1:146))
pred_GBMe1tw.inst<- make.instantaneous(pred_GBMe1tw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred_GBMe1tw.inst, lwd=2, col=2)
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:146))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
#GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,-0.1,0.1))
summary(GBMe1tw)
pred_GBMe1tw<- predict(GBMe1tw, newx=c(1:146))
pred_GBMe1tw.inst<- make.instantaneous(pred_GBMe1tw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred_GBMe1tw.inst, lwd=2, col=2)
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:146))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,-0.1,0.1))
bm_tw<-BM(price,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:146))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(price,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
######GBMe1
GBMe1tw<- GBM(price,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,0.1,0.1))
summary(GBMe1tw)
pred_GBMe1tw<- predict(GBMe1tw, newx=c(1:146))
pred_GBMe1tw.inst<- make.instantaneous(pred_GBMe1tw)
plot(price, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,146))
lines(pred_GBMe1tw.inst, lwd=2, col=2)
View(dataset)
plot(price)
Acf(price_diff)
plot(price)
Acf(price)
library(fpp2)
library(forecast)
?fpp2
plot(price)
Acf(price)
Pacf(price)
consts<- tsdisplay(price)
library(fpp2)
library(forecast)
?fpp2
plot(price)
Acf(price)
Pacf(price)
pricets<- tsdisplay(price)
###General indication: if the ACF is exponentially decaying or sinusoidal and there is a significant spike at lag p in PACF and nothing else,
##it may be an ARMA(p,d,0). If the PACF is exponentially decaying or sinusoidal and there is a significant spike at lag p in ACF and nothing else, it may be an ARMA(0,d,q).
arima1<- Arima(price, order=c(0,0,3))
summary(arima1)
resid1<- residuals(arima1)
tsdisplay(resid1)
plot(price)
lines(fitted(arima1), col=2)
for1<- forecast(arima1)
plot(for1)
